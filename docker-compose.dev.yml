version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dam-postgres-dev
    environment:
      POSTGRES_DB: dam_db
      POSTGRES_USER: dam_user
      POSTGRES_PASSWORD: dam_password
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dam-dev-network
    restart: unless-stopped

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: dam-redis-dev
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dam-dev-network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: dam-minio-dev
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    networks:
      - dam-dev-network
    restart: unless-stopped

  # MinIO Client for setup
  minio-client:
    image: minio/mc:latest
    container_name: dam-minio-client
    depends_on:
      - minio
    command: >
      sh -c "
        sleep 10 &&
        mc alias set myminio http://minio:9000 minioadmin minioadmin &&
        mc mb myminio/dam-assets &&
        mc policy set public myminio/dam-assets &&
        echo 'MinIO setup completed'
      "
    networks:
      - dam-dev-network
    restart: "no"

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  dam-dev-network:
    driver: bridge
