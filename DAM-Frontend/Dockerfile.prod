# Multi-stage build for production
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create custom Nginx configuration
COPY --from=builder /app/nginx.conf /etc/nginx/conf.d/default.conf

# Create non-root user for Nginx
RUN addgroup -g 1002 -S damuser && \
    adduser -S damuser -u 1002 -G damuser

# Set permissions
RUN chown -R damuser:damuser /usr/share/nginx/html && \
    chown -R damuser:damuser /var/cache/nginx && \
    chown -R damuser:damuser /var/log/nginx && \
    chown -R damuser:damuser /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R damuser:damuser /var/run/nginx.pid

# Switch to non-root user
USER damuser

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
